/*
weather.gov API

weather.gov API

API version: 1.8.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package weatherApi

import (
	"encoding/json"
	"time"
)

// AlertCollectionJsonLd struct for AlertCollectionJsonLd
type AlertCollectionJsonLd struct {
	// A title describing the alert collection
	Title *string `json:"title,omitempty"`
	// The last time a change occurred to this collection
	Updated *time.Time `json:"updated,omitempty"`
	Pagination *AlertCollectionPagination `json:"pagination,omitempty"`
	Context *JsonLdContext `json:"@context,omitempty"`
	Graph []Alert `json:"@graph,omitempty"`
}

// NewAlertCollectionJsonLd instantiates a new AlertCollectionJsonLd object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertCollectionJsonLd() *AlertCollectionJsonLd {
	this := AlertCollectionJsonLd{}
	return &this
}

// NewAlertCollectionJsonLdWithDefaults instantiates a new AlertCollectionJsonLd object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertCollectionJsonLdWithDefaults() *AlertCollectionJsonLd {
	this := AlertCollectionJsonLd{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AlertCollectionJsonLd) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertCollectionJsonLd) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AlertCollectionJsonLd) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AlertCollectionJsonLd) SetTitle(v string) {
	o.Title = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *AlertCollectionJsonLd) GetUpdated() time.Time {
	if o == nil || o.Updated == nil {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertCollectionJsonLd) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || o.Updated == nil {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *AlertCollectionJsonLd) HasUpdated() bool {
	if o != nil && o.Updated != nil {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *AlertCollectionJsonLd) SetUpdated(v time.Time) {
	o.Updated = &v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *AlertCollectionJsonLd) GetPagination() AlertCollectionPagination {
	if o == nil || o.Pagination == nil {
		var ret AlertCollectionPagination
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertCollectionJsonLd) GetPaginationOk() (*AlertCollectionPagination, bool) {
	if o == nil || o.Pagination == nil {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *AlertCollectionJsonLd) HasPagination() bool {
	if o != nil && o.Pagination != nil {
		return true
	}

	return false
}

// SetPagination gets a reference to the given AlertCollectionPagination and assigns it to the Pagination field.
func (o *AlertCollectionJsonLd) SetPagination(v AlertCollectionPagination) {
	o.Pagination = &v
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *AlertCollectionJsonLd) GetContext() JsonLdContext {
	if o == nil || o.Context == nil {
		var ret JsonLdContext
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertCollectionJsonLd) GetContextOk() (*JsonLdContext, bool) {
	if o == nil || o.Context == nil {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *AlertCollectionJsonLd) HasContext() bool {
	if o != nil && o.Context != nil {
		return true
	}

	return false
}

// SetContext gets a reference to the given JsonLdContext and assigns it to the Context field.
func (o *AlertCollectionJsonLd) SetContext(v JsonLdContext) {
	o.Context = &v
}

// GetGraph returns the Graph field value if set, zero value otherwise.
func (o *AlertCollectionJsonLd) GetGraph() []Alert {
	if o == nil || o.Graph == nil {
		var ret []Alert
		return ret
	}
	return o.Graph
}

// GetGraphOk returns a tuple with the Graph field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertCollectionJsonLd) GetGraphOk() ([]Alert, bool) {
	if o == nil || o.Graph == nil {
		return nil, false
	}
	return o.Graph, true
}

// HasGraph returns a boolean if a field has been set.
func (o *AlertCollectionJsonLd) HasGraph() bool {
	if o != nil && o.Graph != nil {
		return true
	}

	return false
}

// SetGraph gets a reference to the given []Alert and assigns it to the Graph field.
func (o *AlertCollectionJsonLd) SetGraph(v []Alert) {
	o.Graph = v
}

func (o AlertCollectionJsonLd) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.Updated != nil {
		toSerialize["updated"] = o.Updated
	}
	if o.Pagination != nil {
		toSerialize["pagination"] = o.Pagination
	}
	if o.Context != nil {
		toSerialize["@context"] = o.Context
	}
	if o.Graph != nil {
		toSerialize["@graph"] = o.Graph
	}
	return json.Marshal(toSerialize)
}

type NullableAlertCollectionJsonLd struct {
	value *AlertCollectionJsonLd
	isSet bool
}

func (v NullableAlertCollectionJsonLd) Get() *AlertCollectionJsonLd {
	return v.value
}

func (v *NullableAlertCollectionJsonLd) Set(val *AlertCollectionJsonLd) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertCollectionJsonLd) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertCollectionJsonLd) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertCollectionJsonLd(val *AlertCollectionJsonLd) *NullableAlertCollectionJsonLd {
	return &NullableAlertCollectionJsonLd{value: val, isSet: true}
}

func (v NullableAlertCollectionJsonLd) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertCollectionJsonLd) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


