/*
weather.gov API

weather.gov API

API version: 1.8.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package weatherApi

import (
	"encoding/json"
	"fmt"
)

// IconsSizeParameter struct for IconsSizeParameter
type IconsSizeParameter struct {
	IconsSizeParameterAnyOf *IconsSizeParameterAnyOf
	int32 *int32
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *IconsSizeParameter) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into IconsSizeParameterAnyOf
	err = json.Unmarshal(data, &dst.IconsSizeParameterAnyOf);
	if err == nil {
		jsonIconsSizeParameterAnyOf, _ := json.Marshal(dst.IconsSizeParameterAnyOf)
		if string(jsonIconsSizeParameterAnyOf) == "{}" { // empty struct
			dst.IconsSizeParameterAnyOf = nil
		} else {
			return nil // data stored in dst.IconsSizeParameterAnyOf, return on the first match
		}
	} else {
		dst.IconsSizeParameterAnyOf = nil
	}

	// try to unmarshal JSON data into int32
	err = json.Unmarshal(data, &dst.int32);
	if err == nil {
		jsonint32, _ := json.Marshal(dst.int32)
		if string(jsonint32) == "{}" { // empty struct
			dst.int32 = nil
		} else {
			return nil // data stored in dst.int32, return on the first match
		}
	} else {
		dst.int32 = nil
	}

	return fmt.Errorf("Data failed to match schemas in anyOf(IconsSizeParameter)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *IconsSizeParameter) MarshalJSON() ([]byte, error) {
	if src.IconsSizeParameterAnyOf != nil {
		return json.Marshal(&src.IconsSizeParameterAnyOf)
	}

	if src.int32 != nil {
		return json.Marshal(&src.int32)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableIconsSizeParameter struct {
	value *IconsSizeParameter
	isSet bool
}

func (v NullableIconsSizeParameter) Get() *IconsSizeParameter {
	return v.value
}

func (v *NullableIconsSizeParameter) Set(val *IconsSizeParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableIconsSizeParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableIconsSizeParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIconsSizeParameter(val *IconsSizeParameter) *NullableIconsSizeParameter {
	return &NullableIconsSizeParameter{value: val, isSet: true}
}

func (v NullableIconsSizeParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIconsSizeParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


