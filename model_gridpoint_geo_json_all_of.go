/*
weather.gov API

weather.gov API

API version: 1.8.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package weatherApi

import (
	"encoding/json"
)

// GridpointGeoJsonAllOf struct for GridpointGeoJsonAllOf
type GridpointGeoJsonAllOf struct {
	Properties *Gridpoint `json:"properties,omitempty"`
}

// NewGridpointGeoJsonAllOf instantiates a new GridpointGeoJsonAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGridpointGeoJsonAllOf() *GridpointGeoJsonAllOf {
	this := GridpointGeoJsonAllOf{}
	return &this
}

// NewGridpointGeoJsonAllOfWithDefaults instantiates a new GridpointGeoJsonAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGridpointGeoJsonAllOfWithDefaults() *GridpointGeoJsonAllOf {
	this := GridpointGeoJsonAllOf{}
	return &this
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *GridpointGeoJsonAllOf) GetProperties() Gridpoint {
	if o == nil || o.Properties == nil {
		var ret Gridpoint
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GridpointGeoJsonAllOf) GetPropertiesOk() (*Gridpoint, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *GridpointGeoJsonAllOf) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given Gridpoint and assigns it to the Properties field.
func (o *GridpointGeoJsonAllOf) SetProperties(v Gridpoint) {
	o.Properties = &v
}

func (o GridpointGeoJsonAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	return json.Marshal(toSerialize)
}

type NullableGridpointGeoJsonAllOf struct {
	value *GridpointGeoJsonAllOf
	isSet bool
}

func (v NullableGridpointGeoJsonAllOf) Get() *GridpointGeoJsonAllOf {
	return v.value
}

func (v *NullableGridpointGeoJsonAllOf) Set(val *GridpointGeoJsonAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableGridpointGeoJsonAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableGridpointGeoJsonAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGridpointGeoJsonAllOf(val *GridpointGeoJsonAllOf) *NullableGridpointGeoJsonAllOf {
	return &NullableGridpointGeoJsonAllOf{value: val, isSet: true}
}

func (v NullableGridpointGeoJsonAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGridpointGeoJsonAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


