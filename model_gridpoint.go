/*
weather.gov API

weather.gov API

API version: 1.8.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package weatherApi

import (
	"encoding/json"
	"time"
)

// Gridpoint Raw forecast data for a 2.5km grid square. This is a list of all potential data layers that may appear. Some layers may not be present in all areas. * temperature * dewpoint * maxTemperature * minTemperature * relativeHumidity * apparentTemperature * heatIndex * windChill * skyCover * windDirection * windSpeed * windGust * weather * hazards: Watch and advisory products in effect * probabilityOfPrecipitation * quantitativePrecipitation * iceAccumulation * snowfallAmount * snowLevel * ceilingHeight * visibility * transportWindSpeed * transportWindDirection * mixingHeight * hainesIndex * lightningActivityLevel * twentyFootWindSpeed * twentyFootWindDirection * waveHeight * wavePeriod * waveDirection * primarySwellHeight * primarySwellDirection * secondarySwellHeight * secondarySwellDirection * wavePeriod2 * windWaveHeight * dispersionIndex * pressure: Barometric pressure * probabilityOfTropicalStormWinds * probabilityOfHurricaneWinds * potentialOf15mphWinds * potentialOf25mphWinds * potentialOf35mphWinds * potentialOf45mphWinds * potentialOf20mphWindGusts * potentialOf30mphWindGusts * potentialOf40mphWindGusts * potentialOf50mphWindGusts * potentialOf60mphWindGusts * grasslandFireDangerIndex * probabilityOfThunder * davisStabilityIndex * atmosphericDispersionIndex * lowVisibilityOccurrenceRiskIndex * stability * redFlagThreatIndex 
type Gridpoint struct {
	Context *JsonLdContext `json:"@context,omitempty"`
	// A geometry represented in Well-Known Text (WKT) format.
	Geometry NullableString `json:"geometry,omitempty"`
	Id *string `json:"@id,omitempty"`
	Type *string `json:"@type,omitempty"`
	UpdateTime *time.Time `json:"updateTime,omitempty"`
	ValidTimes *ISO8601Interval `json:"validTimes,omitempty"`
	Elevation *QuantitativeValue `json:"elevation,omitempty"`
	ForecastOffice *string `json:"forecastOffice,omitempty"`
	GridId *string `json:"gridId,omitempty"`
	GridX *int32 `json:"gridX,omitempty"`
	GridY *int32 `json:"gridY,omitempty"`
	Weather *GridpointWeather `json:"weather,omitempty"`
	Hazards *GridpointHazards `json:"hazards,omitempty"`
}

// NewGridpoint instantiates a new Gridpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGridpoint() *Gridpoint {
	this := Gridpoint{}
	return &this
}

// NewGridpointWithDefaults instantiates a new Gridpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGridpointWithDefaults() *Gridpoint {
	this := Gridpoint{}
	return &this
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *Gridpoint) GetContext() JsonLdContext {
	if o == nil || o.Context == nil {
		var ret JsonLdContext
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gridpoint) GetContextOk() (*JsonLdContext, bool) {
	if o == nil || o.Context == nil {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *Gridpoint) HasContext() bool {
	if o != nil && o.Context != nil {
		return true
	}

	return false
}

// SetContext gets a reference to the given JsonLdContext and assigns it to the Context field.
func (o *Gridpoint) SetContext(v JsonLdContext) {
	o.Context = &v
}

// GetGeometry returns the Geometry field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Gridpoint) GetGeometry() string {
	if o == nil || o.Geometry.Get() == nil {
		var ret string
		return ret
	}
	return *o.Geometry.Get()
}

// GetGeometryOk returns a tuple with the Geometry field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Gridpoint) GetGeometryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Geometry.Get(), o.Geometry.IsSet()
}

// HasGeometry returns a boolean if a field has been set.
func (o *Gridpoint) HasGeometry() bool {
	if o != nil && o.Geometry.IsSet() {
		return true
	}

	return false
}

// SetGeometry gets a reference to the given NullableString and assigns it to the Geometry field.
func (o *Gridpoint) SetGeometry(v string) {
	o.Geometry.Set(&v)
}
// SetGeometryNil sets the value for Geometry to be an explicit nil
func (o *Gridpoint) SetGeometryNil() {
	o.Geometry.Set(nil)
}

// UnsetGeometry ensures that no value is present for Geometry, not even an explicit nil
func (o *Gridpoint) UnsetGeometry() {
	o.Geometry.Unset()
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Gridpoint) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gridpoint) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Gridpoint) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Gridpoint) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Gridpoint) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gridpoint) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Gridpoint) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Gridpoint) SetType(v string) {
	o.Type = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *Gridpoint) GetUpdateTime() time.Time {
	if o == nil || o.UpdateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gridpoint) GetUpdateTimeOk() (*time.Time, bool) {
	if o == nil || o.UpdateTime == nil {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *Gridpoint) HasUpdateTime() bool {
	if o != nil && o.UpdateTime != nil {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given time.Time and assigns it to the UpdateTime field.
func (o *Gridpoint) SetUpdateTime(v time.Time) {
	o.UpdateTime = &v
}

// GetValidTimes returns the ValidTimes field value if set, zero value otherwise.
func (o *Gridpoint) GetValidTimes() ISO8601Interval {
	if o == nil || o.ValidTimes == nil {
		var ret ISO8601Interval
		return ret
	}
	return *o.ValidTimes
}

// GetValidTimesOk returns a tuple with the ValidTimes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gridpoint) GetValidTimesOk() (*ISO8601Interval, bool) {
	if o == nil || o.ValidTimes == nil {
		return nil, false
	}
	return o.ValidTimes, true
}

// HasValidTimes returns a boolean if a field has been set.
func (o *Gridpoint) HasValidTimes() bool {
	if o != nil && o.ValidTimes != nil {
		return true
	}

	return false
}

// SetValidTimes gets a reference to the given ISO8601Interval and assigns it to the ValidTimes field.
func (o *Gridpoint) SetValidTimes(v ISO8601Interval) {
	o.ValidTimes = &v
}

// GetElevation returns the Elevation field value if set, zero value otherwise.
func (o *Gridpoint) GetElevation() QuantitativeValue {
	if o == nil || o.Elevation == nil {
		var ret QuantitativeValue
		return ret
	}
	return *o.Elevation
}

// GetElevationOk returns a tuple with the Elevation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gridpoint) GetElevationOk() (*QuantitativeValue, bool) {
	if o == nil || o.Elevation == nil {
		return nil, false
	}
	return o.Elevation, true
}

// HasElevation returns a boolean if a field has been set.
func (o *Gridpoint) HasElevation() bool {
	if o != nil && o.Elevation != nil {
		return true
	}

	return false
}

// SetElevation gets a reference to the given QuantitativeValue and assigns it to the Elevation field.
func (o *Gridpoint) SetElevation(v QuantitativeValue) {
	o.Elevation = &v
}

// GetForecastOffice returns the ForecastOffice field value if set, zero value otherwise.
func (o *Gridpoint) GetForecastOffice() string {
	if o == nil || o.ForecastOffice == nil {
		var ret string
		return ret
	}
	return *o.ForecastOffice
}

// GetForecastOfficeOk returns a tuple with the ForecastOffice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gridpoint) GetForecastOfficeOk() (*string, bool) {
	if o == nil || o.ForecastOffice == nil {
		return nil, false
	}
	return o.ForecastOffice, true
}

// HasForecastOffice returns a boolean if a field has been set.
func (o *Gridpoint) HasForecastOffice() bool {
	if o != nil && o.ForecastOffice != nil {
		return true
	}

	return false
}

// SetForecastOffice gets a reference to the given string and assigns it to the ForecastOffice field.
func (o *Gridpoint) SetForecastOffice(v string) {
	o.ForecastOffice = &v
}

// GetGridId returns the GridId field value if set, zero value otherwise.
func (o *Gridpoint) GetGridId() string {
	if o == nil || o.GridId == nil {
		var ret string
		return ret
	}
	return *o.GridId
}

// GetGridIdOk returns a tuple with the GridId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gridpoint) GetGridIdOk() (*string, bool) {
	if o == nil || o.GridId == nil {
		return nil, false
	}
	return o.GridId, true
}

// HasGridId returns a boolean if a field has been set.
func (o *Gridpoint) HasGridId() bool {
	if o != nil && o.GridId != nil {
		return true
	}

	return false
}

// SetGridId gets a reference to the given string and assigns it to the GridId field.
func (o *Gridpoint) SetGridId(v string) {
	o.GridId = &v
}

// GetGridX returns the GridX field value if set, zero value otherwise.
func (o *Gridpoint) GetGridX() int32 {
	if o == nil || o.GridX == nil {
		var ret int32
		return ret
	}
	return *o.GridX
}

// GetGridXOk returns a tuple with the GridX field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gridpoint) GetGridXOk() (*int32, bool) {
	if o == nil || o.GridX == nil {
		return nil, false
	}
	return o.GridX, true
}

// HasGridX returns a boolean if a field has been set.
func (o *Gridpoint) HasGridX() bool {
	if o != nil && o.GridX != nil {
		return true
	}

	return false
}

// SetGridX gets a reference to the given int32 and assigns it to the GridX field.
func (o *Gridpoint) SetGridX(v int32) {
	o.GridX = &v
}

// GetGridY returns the GridY field value if set, zero value otherwise.
func (o *Gridpoint) GetGridY() int32 {
	if o == nil || o.GridY == nil {
		var ret int32
		return ret
	}
	return *o.GridY
}

// GetGridYOk returns a tuple with the GridY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gridpoint) GetGridYOk() (*int32, bool) {
	if o == nil || o.GridY == nil {
		return nil, false
	}
	return o.GridY, true
}

// HasGridY returns a boolean if a field has been set.
func (o *Gridpoint) HasGridY() bool {
	if o != nil && o.GridY != nil {
		return true
	}

	return false
}

// SetGridY gets a reference to the given int32 and assigns it to the GridY field.
func (o *Gridpoint) SetGridY(v int32) {
	o.GridY = &v
}

// GetWeather returns the Weather field value if set, zero value otherwise.
func (o *Gridpoint) GetWeather() GridpointWeather {
	if o == nil || o.Weather == nil {
		var ret GridpointWeather
		return ret
	}
	return *o.Weather
}

// GetWeatherOk returns a tuple with the Weather field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gridpoint) GetWeatherOk() (*GridpointWeather, bool) {
	if o == nil || o.Weather == nil {
		return nil, false
	}
	return o.Weather, true
}

// HasWeather returns a boolean if a field has been set.
func (o *Gridpoint) HasWeather() bool {
	if o != nil && o.Weather != nil {
		return true
	}

	return false
}

// SetWeather gets a reference to the given GridpointWeather and assigns it to the Weather field.
func (o *Gridpoint) SetWeather(v GridpointWeather) {
	o.Weather = &v
}

// GetHazards returns the Hazards field value if set, zero value otherwise.
func (o *Gridpoint) GetHazards() GridpointHazards {
	if o == nil || o.Hazards == nil {
		var ret GridpointHazards
		return ret
	}
	return *o.Hazards
}

// GetHazardsOk returns a tuple with the Hazards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Gridpoint) GetHazardsOk() (*GridpointHazards, bool) {
	if o == nil || o.Hazards == nil {
		return nil, false
	}
	return o.Hazards, true
}

// HasHazards returns a boolean if a field has been set.
func (o *Gridpoint) HasHazards() bool {
	if o != nil && o.Hazards != nil {
		return true
	}

	return false
}

// SetHazards gets a reference to the given GridpointHazards and assigns it to the Hazards field.
func (o *Gridpoint) SetHazards(v GridpointHazards) {
	o.Hazards = &v
}

func (o Gridpoint) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Context != nil {
		toSerialize["@context"] = o.Context
	}
	if o.Geometry.IsSet() {
		toSerialize["geometry"] = o.Geometry.Get()
	}
	if o.Id != nil {
		toSerialize["@id"] = o.Id
	}
	if o.Type != nil {
		toSerialize["@type"] = o.Type
	}
	if o.UpdateTime != nil {
		toSerialize["updateTime"] = o.UpdateTime
	}
	if o.ValidTimes != nil {
		toSerialize["validTimes"] = o.ValidTimes
	}
	if o.Elevation != nil {
		toSerialize["elevation"] = o.Elevation
	}
	if o.ForecastOffice != nil {
		toSerialize["forecastOffice"] = o.ForecastOffice
	}
	if o.GridId != nil {
		toSerialize["gridId"] = o.GridId
	}
	if o.GridX != nil {
		toSerialize["gridX"] = o.GridX
	}
	if o.GridY != nil {
		toSerialize["gridY"] = o.GridY
	}
	if o.Weather != nil {
		toSerialize["weather"] = o.Weather
	}
	if o.Hazards != nil {
		toSerialize["hazards"] = o.Hazards
	}
	return json.Marshal(toSerialize)
}

type NullableGridpoint struct {
	value *Gridpoint
	isSet bool
}

func (v NullableGridpoint) Get() *Gridpoint {
	return v.value
}

func (v *NullableGridpoint) Set(val *Gridpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableGridpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableGridpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGridpoint(val *Gridpoint) *NullableGridpoint {
	return &NullableGridpoint{value: val, isSet: true}
}

func (v NullableGridpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGridpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


