/*
weather.gov API

weather.gov API

API version: 1.8.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package weatherApi

import (
	"encoding/json"
	"time"
)

// AlertCollection struct for AlertCollection
type AlertCollection struct {
	// A title describing the alert collection
	Title *string `json:"title,omitempty"`
	// The last time a change occurred to this collection
	Updated *time.Time `json:"updated,omitempty"`
	Pagination *AlertCollectionPagination `json:"pagination,omitempty"`
}

// NewAlertCollection instantiates a new AlertCollection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertCollection() *AlertCollection {
	this := AlertCollection{}
	return &this
}

// NewAlertCollectionWithDefaults instantiates a new AlertCollection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertCollectionWithDefaults() *AlertCollection {
	this := AlertCollection{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AlertCollection) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertCollection) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AlertCollection) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AlertCollection) SetTitle(v string) {
	o.Title = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *AlertCollection) GetUpdated() time.Time {
	if o == nil || o.Updated == nil {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertCollection) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || o.Updated == nil {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *AlertCollection) HasUpdated() bool {
	if o != nil && o.Updated != nil {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *AlertCollection) SetUpdated(v time.Time) {
	o.Updated = &v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *AlertCollection) GetPagination() AlertCollectionPagination {
	if o == nil || o.Pagination == nil {
		var ret AlertCollectionPagination
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertCollection) GetPaginationOk() (*AlertCollectionPagination, bool) {
	if o == nil || o.Pagination == nil {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *AlertCollection) HasPagination() bool {
	if o != nil && o.Pagination != nil {
		return true
	}

	return false
}

// SetPagination gets a reference to the given AlertCollectionPagination and assigns it to the Pagination field.
func (o *AlertCollection) SetPagination(v AlertCollectionPagination) {
	o.Pagination = &v
}

func (o AlertCollection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.Updated != nil {
		toSerialize["updated"] = o.Updated
	}
	if o.Pagination != nil {
		toSerialize["pagination"] = o.Pagination
	}
	return json.Marshal(toSerialize)
}

type NullableAlertCollection struct {
	value *AlertCollection
	isSet bool
}

func (v NullableAlertCollection) Get() *AlertCollection {
	return v.value
}

func (v *NullableAlertCollection) Set(val *AlertCollection) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertCollection) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertCollection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertCollection(val *AlertCollection) *NullableAlertCollection {
	return &NullableAlertCollection{value: val, isSet: true}
}

func (v NullableAlertCollection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertCollection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


