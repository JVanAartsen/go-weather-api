/*
weather.gov API

weather.gov API

API version: 1.8.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package weatherApi

import (
	"encoding/json"
)

// RelativeLocationJsonLdAllOf struct for RelativeLocationJsonLdAllOf
type RelativeLocationJsonLdAllOf struct {
	// A geometry represented in Well-Known Text (WKT) format.
	Geometry NullableString `json:"geometry"`
}

// NewRelativeLocationJsonLdAllOf instantiates a new RelativeLocationJsonLdAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRelativeLocationJsonLdAllOf(geometry NullableString) *RelativeLocationJsonLdAllOf {
	this := RelativeLocationJsonLdAllOf{}
	this.Geometry = geometry
	return &this
}

// NewRelativeLocationJsonLdAllOfWithDefaults instantiates a new RelativeLocationJsonLdAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRelativeLocationJsonLdAllOfWithDefaults() *RelativeLocationJsonLdAllOf {
	this := RelativeLocationJsonLdAllOf{}
	return &this
}

// GetGeometry returns the Geometry field value
// If the value is explicit nil, the zero value for string will be returned
func (o *RelativeLocationJsonLdAllOf) GetGeometry() string {
	if o == nil || o.Geometry.Get() == nil {
		var ret string
		return ret
	}

	return *o.Geometry.Get()
}

// GetGeometryOk returns a tuple with the Geometry field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RelativeLocationJsonLdAllOf) GetGeometryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Geometry.Get(), o.Geometry.IsSet()
}

// SetGeometry sets field value
func (o *RelativeLocationJsonLdAllOf) SetGeometry(v string) {
	o.Geometry.Set(&v)
}

func (o RelativeLocationJsonLdAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["geometry"] = o.Geometry.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableRelativeLocationJsonLdAllOf struct {
	value *RelativeLocationJsonLdAllOf
	isSet bool
}

func (v NullableRelativeLocationJsonLdAllOf) Get() *RelativeLocationJsonLdAllOf {
	return v.value
}

func (v *NullableRelativeLocationJsonLdAllOf) Set(val *RelativeLocationJsonLdAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableRelativeLocationJsonLdAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableRelativeLocationJsonLdAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRelativeLocationJsonLdAllOf(val *RelativeLocationJsonLdAllOf) *NullableRelativeLocationJsonLdAllOf {
	return &NullableRelativeLocationJsonLdAllOf{value: val, isSet: true}
}

func (v NullableRelativeLocationJsonLdAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRelativeLocationJsonLdAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


