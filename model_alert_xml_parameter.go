/*
weather.gov API

weather.gov API

API version: 1.8.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package weatherApi

import (
	"encoding/json"
)

// AlertXMLParameter struct for AlertXMLParameter
type AlertXMLParameter struct {
	ValueName *string `json:"valueName,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewAlertXMLParameter instantiates a new AlertXMLParameter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertXMLParameter() *AlertXMLParameter {
	this := AlertXMLParameter{}
	return &this
}

// NewAlertXMLParameterWithDefaults instantiates a new AlertXMLParameter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertXMLParameterWithDefaults() *AlertXMLParameter {
	this := AlertXMLParameter{}
	return &this
}

// GetValueName returns the ValueName field value if set, zero value otherwise.
func (o *AlertXMLParameter) GetValueName() string {
	if o == nil || o.ValueName == nil {
		var ret string
		return ret
	}
	return *o.ValueName
}

// GetValueNameOk returns a tuple with the ValueName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertXMLParameter) GetValueNameOk() (*string, bool) {
	if o == nil || o.ValueName == nil {
		return nil, false
	}
	return o.ValueName, true
}

// HasValueName returns a boolean if a field has been set.
func (o *AlertXMLParameter) HasValueName() bool {
	if o != nil && o.ValueName != nil {
		return true
	}

	return false
}

// SetValueName gets a reference to the given string and assigns it to the ValueName field.
func (o *AlertXMLParameter) SetValueName(v string) {
	o.ValueName = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *AlertXMLParameter) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertXMLParameter) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *AlertXMLParameter) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *AlertXMLParameter) SetValue(v string) {
	o.Value = &v
}

func (o AlertXMLParameter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ValueName != nil {
		toSerialize["valueName"] = o.ValueName
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableAlertXMLParameter struct {
	value *AlertXMLParameter
	isSet bool
}

func (v NullableAlertXMLParameter) Get() *AlertXMLParameter {
	return v.value
}

func (v *NullableAlertXMLParameter) Set(val *AlertXMLParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertXMLParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertXMLParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertXMLParameter(val *AlertXMLParameter) *NullableAlertXMLParameter {
	return &NullableAlertXMLParameter{value: val, isSet: true}
}

func (v NullableAlertXMLParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertXMLParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


