/*
weather.gov API

weather.gov API

API version: 1.8.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package weatherApi

import (
	"encoding/json"
)

// ObservationCloudLayersInner struct for ObservationCloudLayersInner
type ObservationCloudLayersInner struct {
	Base QuantitativeValue `json:"base"`
	Amount MetarSkyCoverage `json:"amount"`
}

// NewObservationCloudLayersInner instantiates a new ObservationCloudLayersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObservationCloudLayersInner(base QuantitativeValue, amount MetarSkyCoverage) *ObservationCloudLayersInner {
	this := ObservationCloudLayersInner{}
	this.Base = base
	this.Amount = amount
	return &this
}

// NewObservationCloudLayersInnerWithDefaults instantiates a new ObservationCloudLayersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObservationCloudLayersInnerWithDefaults() *ObservationCloudLayersInner {
	this := ObservationCloudLayersInner{}
	return &this
}

// GetBase returns the Base field value
func (o *ObservationCloudLayersInner) GetBase() QuantitativeValue {
	if o == nil {
		var ret QuantitativeValue
		return ret
	}

	return o.Base
}

// GetBaseOk returns a tuple with the Base field value
// and a boolean to check if the value has been set.
func (o *ObservationCloudLayersInner) GetBaseOk() (*QuantitativeValue, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Base, true
}

// SetBase sets field value
func (o *ObservationCloudLayersInner) SetBase(v QuantitativeValue) {
	o.Base = v
}

// GetAmount returns the Amount field value
func (o *ObservationCloudLayersInner) GetAmount() MetarSkyCoverage {
	if o == nil {
		var ret MetarSkyCoverage
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *ObservationCloudLayersInner) GetAmountOk() (*MetarSkyCoverage, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *ObservationCloudLayersInner) SetAmount(v MetarSkyCoverage) {
	o.Amount = v
}

func (o ObservationCloudLayersInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["base"] = o.Base
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	return json.Marshal(toSerialize)
}

type NullableObservationCloudLayersInner struct {
	value *ObservationCloudLayersInner
	isSet bool
}

func (v NullableObservationCloudLayersInner) Get() *ObservationCloudLayersInner {
	return v.value
}

func (v *NullableObservationCloudLayersInner) Set(val *ObservationCloudLayersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableObservationCloudLayersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableObservationCloudLayersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObservationCloudLayersInner(val *ObservationCloudLayersInner) *NullableObservationCloudLayersInner {
	return &NullableObservationCloudLayersInner{value: val, isSet: true}
}

func (v NullableObservationCloudLayersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObservationCloudLayersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


