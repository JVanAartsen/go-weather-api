/*
weather.gov API

weather.gov API

API version: 1.8.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package weatherApi

import (
	"encoding/json"
)

// Office struct for Office
type Office struct {
	Context *JsonLdContext `json:"@context,omitempty"`
	Type *string `json:"@type,omitempty"`
	Id *string `json:"@id,omitempty"`
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Address *OfficeAddress `json:"address,omitempty"`
	Telephone *string `json:"telephone,omitempty"`
	FaxNumber *string `json:"faxNumber,omitempty"`
	Email *string `json:"email,omitempty"`
	SameAs *string `json:"sameAs,omitempty"`
	NwsRegion *string `json:"nwsRegion,omitempty"`
	ParentOrganization *string `json:"parentOrganization,omitempty"`
	ResponsibleCounties []string `json:"responsibleCounties,omitempty"`
	ResponsibleForecastZones []string `json:"responsibleForecastZones,omitempty"`
	ResponsibleFireZones []string `json:"responsibleFireZones,omitempty"`
	ApprovedObservationStations []string `json:"approvedObservationStations,omitempty"`
}

// NewOffice instantiates a new Office object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOffice() *Office {
	this := Office{}
	return &this
}

// NewOfficeWithDefaults instantiates a new Office object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOfficeWithDefaults() *Office {
	this := Office{}
	return &this
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *Office) GetContext() JsonLdContext {
	if o == nil || o.Context == nil {
		var ret JsonLdContext
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Office) GetContextOk() (*JsonLdContext, bool) {
	if o == nil || o.Context == nil {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *Office) HasContext() bool {
	if o != nil && o.Context != nil {
		return true
	}

	return false
}

// SetContext gets a reference to the given JsonLdContext and assigns it to the Context field.
func (o *Office) SetContext(v JsonLdContext) {
	o.Context = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Office) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Office) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Office) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Office) SetType(v string) {
	o.Type = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Office) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Office) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Office) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Office) SetId(v string) {
	o.Id = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Office) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Office) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Office) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Office) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Office) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Office) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Office) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Office) SetName(v string) {
	o.Name = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *Office) GetAddress() OfficeAddress {
	if o == nil || o.Address == nil {
		var ret OfficeAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Office) GetAddressOk() (*OfficeAddress, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *Office) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given OfficeAddress and assigns it to the Address field.
func (o *Office) SetAddress(v OfficeAddress) {
	o.Address = &v
}

// GetTelephone returns the Telephone field value if set, zero value otherwise.
func (o *Office) GetTelephone() string {
	if o == nil || o.Telephone == nil {
		var ret string
		return ret
	}
	return *o.Telephone
}

// GetTelephoneOk returns a tuple with the Telephone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Office) GetTelephoneOk() (*string, bool) {
	if o == nil || o.Telephone == nil {
		return nil, false
	}
	return o.Telephone, true
}

// HasTelephone returns a boolean if a field has been set.
func (o *Office) HasTelephone() bool {
	if o != nil && o.Telephone != nil {
		return true
	}

	return false
}

// SetTelephone gets a reference to the given string and assigns it to the Telephone field.
func (o *Office) SetTelephone(v string) {
	o.Telephone = &v
}

// GetFaxNumber returns the FaxNumber field value if set, zero value otherwise.
func (o *Office) GetFaxNumber() string {
	if o == nil || o.FaxNumber == nil {
		var ret string
		return ret
	}
	return *o.FaxNumber
}

// GetFaxNumberOk returns a tuple with the FaxNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Office) GetFaxNumberOk() (*string, bool) {
	if o == nil || o.FaxNumber == nil {
		return nil, false
	}
	return o.FaxNumber, true
}

// HasFaxNumber returns a boolean if a field has been set.
func (o *Office) HasFaxNumber() bool {
	if o != nil && o.FaxNumber != nil {
		return true
	}

	return false
}

// SetFaxNumber gets a reference to the given string and assigns it to the FaxNumber field.
func (o *Office) SetFaxNumber(v string) {
	o.FaxNumber = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *Office) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Office) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *Office) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *Office) SetEmail(v string) {
	o.Email = &v
}

// GetSameAs returns the SameAs field value if set, zero value otherwise.
func (o *Office) GetSameAs() string {
	if o == nil || o.SameAs == nil {
		var ret string
		return ret
	}
	return *o.SameAs
}

// GetSameAsOk returns a tuple with the SameAs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Office) GetSameAsOk() (*string, bool) {
	if o == nil || o.SameAs == nil {
		return nil, false
	}
	return o.SameAs, true
}

// HasSameAs returns a boolean if a field has been set.
func (o *Office) HasSameAs() bool {
	if o != nil && o.SameAs != nil {
		return true
	}

	return false
}

// SetSameAs gets a reference to the given string and assigns it to the SameAs field.
func (o *Office) SetSameAs(v string) {
	o.SameAs = &v
}

// GetNwsRegion returns the NwsRegion field value if set, zero value otherwise.
func (o *Office) GetNwsRegion() string {
	if o == nil || o.NwsRegion == nil {
		var ret string
		return ret
	}
	return *o.NwsRegion
}

// GetNwsRegionOk returns a tuple with the NwsRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Office) GetNwsRegionOk() (*string, bool) {
	if o == nil || o.NwsRegion == nil {
		return nil, false
	}
	return o.NwsRegion, true
}

// HasNwsRegion returns a boolean if a field has been set.
func (o *Office) HasNwsRegion() bool {
	if o != nil && o.NwsRegion != nil {
		return true
	}

	return false
}

// SetNwsRegion gets a reference to the given string and assigns it to the NwsRegion field.
func (o *Office) SetNwsRegion(v string) {
	o.NwsRegion = &v
}

// GetParentOrganization returns the ParentOrganization field value if set, zero value otherwise.
func (o *Office) GetParentOrganization() string {
	if o == nil || o.ParentOrganization == nil {
		var ret string
		return ret
	}
	return *o.ParentOrganization
}

// GetParentOrganizationOk returns a tuple with the ParentOrganization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Office) GetParentOrganizationOk() (*string, bool) {
	if o == nil || o.ParentOrganization == nil {
		return nil, false
	}
	return o.ParentOrganization, true
}

// HasParentOrganization returns a boolean if a field has been set.
func (o *Office) HasParentOrganization() bool {
	if o != nil && o.ParentOrganization != nil {
		return true
	}

	return false
}

// SetParentOrganization gets a reference to the given string and assigns it to the ParentOrganization field.
func (o *Office) SetParentOrganization(v string) {
	o.ParentOrganization = &v
}

// GetResponsibleCounties returns the ResponsibleCounties field value if set, zero value otherwise.
func (o *Office) GetResponsibleCounties() []string {
	if o == nil || o.ResponsibleCounties == nil {
		var ret []string
		return ret
	}
	return o.ResponsibleCounties
}

// GetResponsibleCountiesOk returns a tuple with the ResponsibleCounties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Office) GetResponsibleCountiesOk() ([]string, bool) {
	if o == nil || o.ResponsibleCounties == nil {
		return nil, false
	}
	return o.ResponsibleCounties, true
}

// HasResponsibleCounties returns a boolean if a field has been set.
func (o *Office) HasResponsibleCounties() bool {
	if o != nil && o.ResponsibleCounties != nil {
		return true
	}

	return false
}

// SetResponsibleCounties gets a reference to the given []string and assigns it to the ResponsibleCounties field.
func (o *Office) SetResponsibleCounties(v []string) {
	o.ResponsibleCounties = v
}

// GetResponsibleForecastZones returns the ResponsibleForecastZones field value if set, zero value otherwise.
func (o *Office) GetResponsibleForecastZones() []string {
	if o == nil || o.ResponsibleForecastZones == nil {
		var ret []string
		return ret
	}
	return o.ResponsibleForecastZones
}

// GetResponsibleForecastZonesOk returns a tuple with the ResponsibleForecastZones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Office) GetResponsibleForecastZonesOk() ([]string, bool) {
	if o == nil || o.ResponsibleForecastZones == nil {
		return nil, false
	}
	return o.ResponsibleForecastZones, true
}

// HasResponsibleForecastZones returns a boolean if a field has been set.
func (o *Office) HasResponsibleForecastZones() bool {
	if o != nil && o.ResponsibleForecastZones != nil {
		return true
	}

	return false
}

// SetResponsibleForecastZones gets a reference to the given []string and assigns it to the ResponsibleForecastZones field.
func (o *Office) SetResponsibleForecastZones(v []string) {
	o.ResponsibleForecastZones = v
}

// GetResponsibleFireZones returns the ResponsibleFireZones field value if set, zero value otherwise.
func (o *Office) GetResponsibleFireZones() []string {
	if o == nil || o.ResponsibleFireZones == nil {
		var ret []string
		return ret
	}
	return o.ResponsibleFireZones
}

// GetResponsibleFireZonesOk returns a tuple with the ResponsibleFireZones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Office) GetResponsibleFireZonesOk() ([]string, bool) {
	if o == nil || o.ResponsibleFireZones == nil {
		return nil, false
	}
	return o.ResponsibleFireZones, true
}

// HasResponsibleFireZones returns a boolean if a field has been set.
func (o *Office) HasResponsibleFireZones() bool {
	if o != nil && o.ResponsibleFireZones != nil {
		return true
	}

	return false
}

// SetResponsibleFireZones gets a reference to the given []string and assigns it to the ResponsibleFireZones field.
func (o *Office) SetResponsibleFireZones(v []string) {
	o.ResponsibleFireZones = v
}

// GetApprovedObservationStations returns the ApprovedObservationStations field value if set, zero value otherwise.
func (o *Office) GetApprovedObservationStations() []string {
	if o == nil || o.ApprovedObservationStations == nil {
		var ret []string
		return ret
	}
	return o.ApprovedObservationStations
}

// GetApprovedObservationStationsOk returns a tuple with the ApprovedObservationStations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Office) GetApprovedObservationStationsOk() ([]string, bool) {
	if o == nil || o.ApprovedObservationStations == nil {
		return nil, false
	}
	return o.ApprovedObservationStations, true
}

// HasApprovedObservationStations returns a boolean if a field has been set.
func (o *Office) HasApprovedObservationStations() bool {
	if o != nil && o.ApprovedObservationStations != nil {
		return true
	}

	return false
}

// SetApprovedObservationStations gets a reference to the given []string and assigns it to the ApprovedObservationStations field.
func (o *Office) SetApprovedObservationStations(v []string) {
	o.ApprovedObservationStations = v
}

func (o Office) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Context != nil {
		toSerialize["@context"] = o.Context
	}
	if o.Type != nil {
		toSerialize["@type"] = o.Type
	}
	if o.Id != nil {
		toSerialize["@id"] = o.Id
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.Telephone != nil {
		toSerialize["telephone"] = o.Telephone
	}
	if o.FaxNumber != nil {
		toSerialize["faxNumber"] = o.FaxNumber
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.SameAs != nil {
		toSerialize["sameAs"] = o.SameAs
	}
	if o.NwsRegion != nil {
		toSerialize["nwsRegion"] = o.NwsRegion
	}
	if o.ParentOrganization != nil {
		toSerialize["parentOrganization"] = o.ParentOrganization
	}
	if o.ResponsibleCounties != nil {
		toSerialize["responsibleCounties"] = o.ResponsibleCounties
	}
	if o.ResponsibleForecastZones != nil {
		toSerialize["responsibleForecastZones"] = o.ResponsibleForecastZones
	}
	if o.ResponsibleFireZones != nil {
		toSerialize["responsibleFireZones"] = o.ResponsibleFireZones
	}
	if o.ApprovedObservationStations != nil {
		toSerialize["approvedObservationStations"] = o.ApprovedObservationStations
	}
	return json.Marshal(toSerialize)
}

type NullableOffice struct {
	value *Office
	isSet bool
}

func (v NullableOffice) Get() *Office {
	return v.value
}

func (v *NullableOffice) Set(val *Office) {
	v.value = val
	v.isSet = true
}

func (v NullableOffice) IsSet() bool {
	return v.isSet
}

func (v *NullableOffice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOffice(val *Office) *NullableOffice {
	return &NullableOffice{value: val, isSet: true}
}

func (v NullableOffice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOffice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


