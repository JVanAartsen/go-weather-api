/*
weather.gov API

weather.gov API

API version: 1.8.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package weatherApi

import (
	"encoding/json"
)

// GridpointWeather struct for GridpointWeather
type GridpointWeather struct {
	Values []GridpointWeatherValuesInner `json:"values"`
}

// NewGridpointWeather instantiates a new GridpointWeather object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGridpointWeather(values []GridpointWeatherValuesInner) *GridpointWeather {
	this := GridpointWeather{}
	this.Values = values
	return &this
}

// NewGridpointWeatherWithDefaults instantiates a new GridpointWeather object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGridpointWeatherWithDefaults() *GridpointWeather {
	this := GridpointWeather{}
	return &this
}

// GetValues returns the Values field value
func (o *GridpointWeather) GetValues() []GridpointWeatherValuesInner {
	if o == nil {
		var ret []GridpointWeatherValuesInner
		return ret
	}

	return o.Values
}

// GetValuesOk returns a tuple with the Values field value
// and a boolean to check if the value has been set.
func (o *GridpointWeather) GetValuesOk() ([]GridpointWeatherValuesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Values, true
}

// SetValues sets field value
func (o *GridpointWeather) SetValues(v []GridpointWeatherValuesInner) {
	o.Values = v
}

func (o GridpointWeather) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["values"] = o.Values
	}
	return json.Marshal(toSerialize)
}

type NullableGridpointWeather struct {
	value *GridpointWeather
	isSet bool
}

func (v NullableGridpointWeather) Get() *GridpointWeather {
	return v.value
}

func (v *NullableGridpointWeather) Set(val *GridpointWeather) {
	v.value = val
	v.isSet = true
}

func (v NullableGridpointWeather) IsSet() bool {
	return v.isSet
}

func (v *NullableGridpointWeather) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGridpointWeather(val *GridpointWeather) *NullableGridpointWeather {
	return &NullableGridpointWeather{value: val, isSet: true}
}

func (v NullableGridpointWeather) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGridpointWeather) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


