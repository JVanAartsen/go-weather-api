/*
weather.gov API

weather.gov API

API version: 1.8.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package weatherApi

import (
	"encoding/json"
)

// ObservationStationCollectionGeoJsonAllOf struct for ObservationStationCollectionGeoJsonAllOf
type ObservationStationCollectionGeoJsonAllOf struct {
	Features []ObservationStationGeoJsonAllOf `json:"features,omitempty"`
	ObservationStations []string `json:"observationStations,omitempty"`
}

// NewObservationStationCollectionGeoJsonAllOf instantiates a new ObservationStationCollectionGeoJsonAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewObservationStationCollectionGeoJsonAllOf() *ObservationStationCollectionGeoJsonAllOf {
	this := ObservationStationCollectionGeoJsonAllOf{}
	return &this
}

// NewObservationStationCollectionGeoJsonAllOfWithDefaults instantiates a new ObservationStationCollectionGeoJsonAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewObservationStationCollectionGeoJsonAllOfWithDefaults() *ObservationStationCollectionGeoJsonAllOf {
	this := ObservationStationCollectionGeoJsonAllOf{}
	return &this
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *ObservationStationCollectionGeoJsonAllOf) GetFeatures() []ObservationStationGeoJsonAllOf {
	if o == nil || o.Features == nil {
		var ret []ObservationStationGeoJsonAllOf
		return ret
	}
	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObservationStationCollectionGeoJsonAllOf) GetFeaturesOk() ([]ObservationStationGeoJsonAllOf, bool) {
	if o == nil || o.Features == nil {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *ObservationStationCollectionGeoJsonAllOf) HasFeatures() bool {
	if o != nil && o.Features != nil {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given []ObservationStationGeoJsonAllOf and assigns it to the Features field.
func (o *ObservationStationCollectionGeoJsonAllOf) SetFeatures(v []ObservationStationGeoJsonAllOf) {
	o.Features = v
}

// GetObservationStations returns the ObservationStations field value if set, zero value otherwise.
func (o *ObservationStationCollectionGeoJsonAllOf) GetObservationStations() []string {
	if o == nil || o.ObservationStations == nil {
		var ret []string
		return ret
	}
	return o.ObservationStations
}

// GetObservationStationsOk returns a tuple with the ObservationStations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ObservationStationCollectionGeoJsonAllOf) GetObservationStationsOk() ([]string, bool) {
	if o == nil || o.ObservationStations == nil {
		return nil, false
	}
	return o.ObservationStations, true
}

// HasObservationStations returns a boolean if a field has been set.
func (o *ObservationStationCollectionGeoJsonAllOf) HasObservationStations() bool {
	if o != nil && o.ObservationStations != nil {
		return true
	}

	return false
}

// SetObservationStations gets a reference to the given []string and assigns it to the ObservationStations field.
func (o *ObservationStationCollectionGeoJsonAllOf) SetObservationStations(v []string) {
	o.ObservationStations = v
}

func (o ObservationStationCollectionGeoJsonAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Features != nil {
		toSerialize["features"] = o.Features
	}
	if o.ObservationStations != nil {
		toSerialize["observationStations"] = o.ObservationStations
	}
	return json.Marshal(toSerialize)
}

type NullableObservationStationCollectionGeoJsonAllOf struct {
	value *ObservationStationCollectionGeoJsonAllOf
	isSet bool
}

func (v NullableObservationStationCollectionGeoJsonAllOf) Get() *ObservationStationCollectionGeoJsonAllOf {
	return v.value
}

func (v *NullableObservationStationCollectionGeoJsonAllOf) Set(val *ObservationStationCollectionGeoJsonAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableObservationStationCollectionGeoJsonAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableObservationStationCollectionGeoJsonAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableObservationStationCollectionGeoJsonAllOf(val *ObservationStationCollectionGeoJsonAllOf) *NullableObservationStationCollectionGeoJsonAllOf {
	return &NullableObservationStationCollectionGeoJsonAllOf{value: val, isSet: true}
}

func (v NullableObservationStationCollectionGeoJsonAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableObservationStationCollectionGeoJsonAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


